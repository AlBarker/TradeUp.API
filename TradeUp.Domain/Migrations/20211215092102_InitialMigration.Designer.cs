// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TradeUp.Domain;

#nullable disable

namespace TradeUp.Domain.Migrations
{
    [DbContext(typeof(TradeUpContext))]
    [Migration("20211215092102_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TradeUp.Domain.Contributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContributionFactor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contributors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContributionFactor = 1,
                            Name = "London",
                            Size = 100
                        },
                        new
                        {
                            Id = 2,
                            ContributionFactor = 1,
                            Name = "Manchester",
                            Size = 50
                        });
                });

            modelBuilder.Entity("TradeUp.Domain.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("CountAvailable")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountAvailable = 100L,
                            Name = "Iron",
                            Price = 10.5
                        },
                        new
                        {
                            Id = 2,
                            CountAvailable = 50L,
                            Name = "Copper",
                            Price = 4.0
                        });
                });

            modelBuilder.Entity("TradeUp.Domain.ResourceContributor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ContributorId")
                        .HasColumnType("int");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<int>("MaxContributionRange")
                        .HasColumnType("int");

                    b.Property<int>("MinContributionRange")
                        .HasColumnType("int");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContributorId");

                    b.HasIndex("ResourceId");

                    b.ToTable("ResourceContributors");
                });

            modelBuilder.Entity("TradeUp.Domain.ResourceContributor", b =>
                {
                    b.HasOne("TradeUp.Domain.Contributor", "Contributor")
                        .WithMany()
                        .HasForeignKey("ContributorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TradeUp.Domain.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contributor");

                    b.Navigation("Resource");
                });
#pragma warning restore 612, 618
        }
    }
}
